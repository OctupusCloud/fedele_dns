# Generated by Django 4.2.6 on 2024-05-21 14:32

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import fedele_dns.fields.address
import fedele_dns.fields.network
import taggit.managers
import utilities.json


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('ipam', '0067_ipaddress_index_host'),
        ('extras', '0098_webhook_custom_field_data_webhook_tags'),
        ('tenancy', '0011_contactassignment_tags'),
    ]

    operations = [
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('contact_id', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(blank=True, max_length=100)),
                ('organization', models.CharField(blank=True, max_length=200)),
                ('street', models.CharField(blank=True, max_length=50)),
                ('city', models.CharField(blank=True, max_length=50)),
                ('state_province', models.CharField(blank=True, max_length=255)),
                ('postal_code', models.CharField(blank=True, max_length=20)),
                ('country', models.CharField(blank=True, max_length=2)),
                ('phone', models.CharField(blank=True, max_length=50)),
                ('phone_ext', models.CharField(blank=True, max_length=50)),
                ('fax', models.CharField(blank=True, max_length=50)),
                ('fax_ext', models.CharField(blank=True, max_length=50)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'ordering': ('name', 'contact_id'),
            },
        ),
        migrations.CreateModel(
            name='NameServer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.CharField(blank=True, max_length=200)),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
                ('tenant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='netbox_dns_nameservers', to='tenancy.tenant')),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Registrar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('iana_id', models.IntegerField(blank=True, null=True)),
                ('referral_url', models.URLField(blank=True, max_length=255)),
                ('whois_server', models.CharField(blank=True, max_length=255)),
                ('address', models.CharField(blank=True, max_length=200)),
                ('abuse_email', models.EmailField(blank=True, max_length=254)),
                ('abuse_phone', models.CharField(blank=True, max_length=50)),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'ordering': ('name', 'iana_id'),
            },
        ),
        migrations.CreateModel(
            name='View',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.CharField(blank=True, max_length=200)),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
                ('tenant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='netbox_dns_views', to='tenancy.tenant')),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Zone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('name', models.CharField(max_length=255)),
                ('status', models.CharField(blank=True, default='active', max_length=50)),
                ('default_ttl', models.PositiveIntegerField(blank=True, validators=[django.core.validators.MinValueValidator(1)])),
                ('soa_ttl', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('soa_rname', models.CharField(max_length=255)),
                ('soa_serial', models.BigIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4294967295)])),
                ('soa_refresh', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('soa_retry', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('soa_expire', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('soa_minimum', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('soa_serial_auto', models.BooleanField(default=True)),
                ('description', models.CharField(blank=True, max_length=200)),
                ('arpa_network', fedele_dns.fields.network.NetworkField(blank=True, null=True)),
                ('registry_domain_id', models.CharField(blank=True, max_length=50, null=True)),
                ('admin_c', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='admin_c_zones', to='fedele_dns.contact')),
                ('billing_c', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='billing_c_zones', to='fedele_dns.contact')),
                ('nameservers', models.ManyToManyField(blank=True, related_name='zones', to='fedele_dns.nameserver')),
                ('registrant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='fedele_dns.contact')),
                ('registrar', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='fedele_dns.registrar')),
                ('soa_mname', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='zones_soa', to='fedele_dns.nameserver')),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
                ('tech_c', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tech_c_zones', to='fedele_dns.contact')),
                ('tenant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='netbox_dns_zones', to='tenancy.tenant')),
                ('view', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='fedele_dns.view')),
            ],
            options={
                'ordering': ('view', 'name'),
                'unique_together': {('view', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Record',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('type', models.CharField(max_length=10)),
                ('name', models.CharField(max_length=255)),
                ('value', models.CharField(max_length=65535)),
                ('status', models.CharField(default='active', max_length=50)),
                ('ttl', models.PositiveIntegerField(blank=True, null=True)),
                ('managed', models.BooleanField(default=False)),
                ('disable_ptr', models.BooleanField(default=False)),
                ('description', models.CharField(blank=True, max_length=200)),
                ('ip_address', fedele_dns.fields.address.AddressField(blank=True, null=True)),
                ('ipam_ip_address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='netbox_dns_records', to='ipam.ipaddress')),
                ('ptr_record', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='address_record', to='fedele_dns.record')),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
                ('tenant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='netbox_dns_records', to='tenancy.tenant')),
                ('zone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fedele_dns.zone')),
            ],
            options={
                'ordering': ('zone', 'name', 'type', 'value', 'status'),
            },
        ),
    ]
